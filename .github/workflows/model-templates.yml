name: Model templates runner

on:
  push:
    paths:
      - "src/**"
      - "tests/**"
      - ".github/**"
      - "templates/**"
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - ".github/**"
      - "templates/**"


jobs:
  run_tests_torch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6

      - name: Loading cache.
        uses: actions/cache@v2
        id: cache
        with:
          path: .env
          key: v1.1-tests_torch_gpu-${{ hashFiles('setup.py') }}

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install .[dev]
      - name: Create model files
        run: |
          transformers-cli add-new-model --testing --testing_file=templates/adding_a_new_model/tests/encoder-bert-tokenizer.json --path=templates/adding_a_new_model
          transformers-cli add-new-model --testing --testing_file=templates/adding_a_new_model/tests/pt-encoder-bert-tokenizer.json --path=templates/adding_a_new_model
          transformers-cli add-new-model --testing --testing_file=templates/adding_a_new_model/tests/standalone.json --path=templates/adding_a_new_model
          transformers-cli add-new-model --testing --testing_file=templates/adding_a_new_model/tests/tf-encoder-bert-tokenizer.json --path=templates/adding_a_new_model

      - name: Run all non-slow tests
        run: |
          python -m pytest -n 2 --dist=loadfile -s --make-reports=tests_torch_templates tests/*template*

      - name: Failure short reports
        if: ${{ always() }}
        run: cat reports/tests_torch_templates_failures_short.txt

      - name: Test suite reports artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: run_all_tests_torch_templates_test_reports
          path: reports
